#ifndef CBPM_CONFIG_A_H
#define CBPM_CONFIG_A_H

//------------------------------------------------------------------------
//  D O     N O T     E D I T     T H I S     F I L E
//------------------------------------------------------------------------
// File         :  cbpm_config_a.h
// Date Created :  Fri Sep 14 14:08:01 2012
//
// Description  :  This file was automatically generated by the BIParser.
//                 It defines the contents of the COMM_KEY_CONFIG data
//                 struct defs for each flagged structure from the
//                 BIParser input (.def) file.
//------------------------------------------------------------------------

#include <stdio.h>
//-----------------------------------------------------------------------+
//  The following provides for C++ compatibility (ie, C++ routines can   |
//  explicitly use this include file).                                   |
//-----------------------------------------------------------------------+
#if defined (__cplusplus)
extern "C" {
#endif


#include "cbi_conv_protos.h"
#include "cbi_core_inst_includes.h"
#include "cbpm_types_a.h"
#include "cbpm_tags_a.h"
#include "cbpm_protos_a.h"


//================================================================
#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_cmd_params_cfg = {
         "cbpm_cmd_params",                          // name
         CBPM_CMD_PARAMS_TAG,                        // struct_tag
         1,                                          // exe_type_allowed
         2,                                          // pkt_size
         349,                                        // num_pkts
         20,                                         // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT}, // data types
         {1, 1, 40, 640, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // data counts
         {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // element sizes
         {cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_cmd_params_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_temperatures_cfg = {
         "cbpm_temperatures",                        // name
         CBPM_TEMPERATURES_TAG,                      // struct_tag
         1,                                          // exe_type_allowed
         6,                                          // pkt_size
         1,                                          // num_pkts
         3,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_FLOAT, CBI_FLOAT, CBI_FLOAT},          // data types
         {1, 1, CBPM_MAX_CARDS},                     // data counts
         {1, 1, 1},                                  // element sizes
         {cbi_float_convert, cbi_float_convert, cbi_float_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_temperatures_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_timing_config_cfg = {
         "cbpm_timing_config",                       // name
         CBPM_TIMING_CONFIG_TAG,                     // struct_tag
         1,                                          // exe_type_allowed
         96,                                         // pkt_size
         1,                                          // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_STRUCT},                               // data types
         {CBPM_MAX_TIMING_SETUPS},                   // data counts
         {2 + CBPM_MAX_TIMING_BLOCKS + CBPM_MAX_TIMING_BLOCKS + CBPM_MAX_TIMING_BLOCKS + CBPM_MAX_TIMING_BLOCKS*CBPM_MAX_CARDS}, // element sizes
         {cbpm_tsetup_convert},                      // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_timing_config_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_gain_config_cfg = {
         "cbpm_gain_config",                         // name
         CBPM_GAIN_CONFIG_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         191,                                        // pkt_size
         1,                                          // num_pkts
         4,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_FLOAT, CBI_FLOAT, CBI_INT},   // data types
         {CBPM_MAX_GAINS, CBPM_MAX_TIMING_BLOCKS*CBPM_MAX_CARDS*CBPM_MAX_GAINS, CBPM_MAX_TIMING_BLOCKS*CBPM_MAX_CARDS*CBPM_MAX_GAINS, CBPM_MAX_CARDS}, // data counts
         {1, 1, 1, 1},                               // element sizes
         {cbi_int_convert, cbi_float_convert, cbi_float_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_gain_config_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_pedestal_config_cfg = {
         "cbpm_pedestal_config",                     // name
         CBPM_PEDESTAL_CONFIG_TAG,                   // struct_tag
         1,                                          // exe_type_allowed
         176,                                        // pkt_size
         3,                                          // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_STRUCT},                               // data types
         {CBPM_MAX_MULTIGAIN_SETUPS},                // data counts
         {CBPM_MAX_TIMING_BLOCKS*CBPM_MAX_CARDS*CBPM_MAX_GAINS + CBPM_MAX_TIMING_BLOCKS*CBPM_MAX_CARDS*CBPM_MAX_GAINS}, // element sizes
         {cbpm_pedestals_convert},                   // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_pedestal_config_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_op_timing_cfg = {
         "cbpm_op_timing",                           // name
         CBPM_OP_TIMING_TAG,                         // struct_tag
         1,                                          // exe_type_allowed
         1,                                          // pkt_size
         1,                                          // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {1},                                        // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_op_timing_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_op_gain_cfg = {
         "cbpm_op_gain",                             // name
         CBPM_OP_GAIN_TAG,                           // struct_tag
         1,                                          // exe_type_allowed
         8,                                          // pkt_size
         1,                                          // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {CBPM_MAX_CARDS*CBPM_MAX_TIMING_BLOCKS},    // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_op_gain_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_raw_data_header_cfg = {
         "cbpm_raw_data_header",                     // name
         CBPM_RAW_DATA_HEADER_TAG,                   // struct_tag
         1,                                          // exe_type_allowed
         39,                                         // pkt_size
         1,                                          // num_pkts
         15,                                         // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT}, // data types
         {1, CBPM_MAX_TIMING_BLOCKS, CBPM_MAX_TIMING_BLOCKS, 1, 1, 1, 1, 1, 1, CBPM_MAX_CARDS, CBPM_MAX_CARDS, CBPM_MAX_CARDS, CBPM_MAX_CARDS, CBPM_MAX_CARDS, CBPM_MAX_CARDS*CBPM_MAX_TIMING_BLOCKS}, // data counts
         {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // element sizes
         {cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_raw_data_header_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_adc_buffer0_cfg = {
         "cbpm_adc_buffer0",                         // name
         CBPM_ADC_BUFFER0_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         1280,                                       // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {CBPM_ADC_BUF_USE},                         // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_adc_buffer0_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_adc_buffer1_cfg = {
         "cbpm_adc_buffer1",                         // name
         CBPM_ADC_BUFFER1_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         1280,                                       // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {CBPM_ADC_BUF_USE},                         // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_adc_buffer1_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_adc_buffer2_cfg = {
         "cbpm_adc_buffer2",                         // name
         CBPM_ADC_BUFFER2_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         1280,                                       // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {CBPM_ADC_BUF_USE},                         // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_adc_buffer2_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_adc_buffer3_cfg = {
         "cbpm_adc_buffer3",                         // name
         CBPM_ADC_BUFFER3_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         1280,                                       // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {CBPM_ADC_BUF_USE},                         // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_adc_buffer3_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_adc_buffer4_cfg = {
         "cbpm_adc_buffer4",                         // name
         CBPM_ADC_BUFFER4_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         1280,                                       // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {CBPM_ADC_BUF_USE},                         // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_adc_buffer4_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_adc_buffer5_cfg = {
         "cbpm_adc_buffer5",                         // name
         CBPM_ADC_BUFFER5_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         1280,                                       // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {CBPM_ADC_BUF_USE},                         // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_adc_buffer5_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_adc_buffer6_cfg = {
         "cbpm_adc_buffer6",                         // name
         CBPM_ADC_BUFFER6_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         1280,                                       // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {CBPM_ADC_BUF_USE},                         // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_adc_buffer6_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_adc_buffer7_cfg = {
         "cbpm_adc_buffer7",                         // name
         CBPM_ADC_BUFFER7_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         1280,                                       // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {CBPM_ADC_BUF_USE},                         // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_adc_buffer7_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_ph_word_buf_cfg = {
         "cbpm_ph_word_buf",                         // name
         CBPM_PH_WORD_BUF_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         1280,                                       // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {CBPM_ADC_BUF_USE},                         // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_ph_word_buf_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_proc_buf_cfg = {
         "cbpm_proc_buf",                            // name
         CBPM_PROC_BUF_TAG,                          // struct_tag
         1,                                          // exe_type_allowed
         220,                                        // pkt_size
         32,                                         // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_STRUCT},                               // data types
         {CBPM_MAX_BUNCHES},                         // data counts
         {3 + CBPM_MAX_CARDS + CBPM_MAX_CARDS},      // element sizes
         {cbpm_proc_data_convert},                   // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_proc_buf_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_proc_buf_header_cfg = {
         "cbpm_proc_buf_header",                     // name
         CBPM_PROC_BUF_HEADER_TAG,                   // struct_tag
         1,                                          // exe_type_allowed
         5,                                          // pkt_size
         1,                                          // num_pkts
         3,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_INT, CBI_INT},                // data types
         {1, CBPM_MAX_PROC_BUFS, 1},                 // data counts
         {1, 1, 1},                                  // element sizes
         {cbi_int_convert, cbi_int_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_proc_buf_header_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_proc_sum_dat_buf_cfg = {
         "cbpm_proc_sum_dat_buf",                    // name
         CBPM_PROC_SUM_DAT_BUF_TAG,                  // struct_tag
         1,                                          // exe_type_allowed
         59,                                         // pkt_size
         11,                                         // num_pkts
         3,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_FLOAT, CBI_INT, CBI_INT},              // data types
         {CBPM_MAX_BUNCHES, 1, CBPM_MAX_CARDS*CBPM_MAX_TIMING_BLOCKS}, // data counts
         {1, 1, 1},                                  // element sizes
         {cbi_float_convert, cbi_int_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_proc_sum_dat_buf_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_proc_buf_io_cfg = {
         "cbpm_proc_buf_io",                         // name
         CBPM_PROC_BUF_IO_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         1,                                          // pkt_size
         1,                                          // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {1},                                        // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_proc_buf_io_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_summ_buf_cfg = {
         "cbpm_summ_buf",                            // name
         CBPM_SUMM_BUF_TAG,                          // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         25,                                         // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         VAR_REC_LENGTH,                             // rec length flag
         {CBI_STRUCT},                               // data types
         {CBPM_MAX_AUTO_SAMPLES},                    // data counts
         {2 + CBPM_MAX_CARDS + CBPM_MAX_CARDS},      // element sizes
         {cbpm_summ_data_convert},                   // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_summ_buf_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_signal_stat_cfg = {
         "cbpm_signal_stat",                         // name
         CBPM_SIGNAL_STAT_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         8,                                          // pkt_size
         1,                                          // num_pkts
         2,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_FLOAT, CBI_FLOAT},                     // data types
         {CBPM_MAX_CARDS, CBPM_MAX_CARDS},           // data counts
         {1, 1},                                     // element sizes
         {cbi_float_convert, cbi_float_convert},     // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_signal_stat_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_phase_config_cfg = {
         "cbpm_phase_config",                        // name
         CBPM_PHASE_CONFIG_TAG,                      // struct_tag
         1,                                          // exe_type_allowed
         22,                                         // pkt_size
         1,                                          // num_pkts
         3,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_INT, CBI_INT},                // data types
         {CBI_NUM_SPECIES*CBPM_MAX_PHASE_JUMPS, CBI_NUM_SPECIES*CBPM_MAX_PHASE_JUMPS+1, CBI_NUM_SPECIES*CBPM_MAX_PHASE_JUMPS+1}, // data counts
         {1, 1, 1},                                  // element sizes
         {cbi_int_convert, cbi_int_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_phase_config_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_beta_phase_out_cfg = {
         "cbpm_beta_phase_out",                      // name
         CBPM_BETA_PHASE_OUT_TAG,                    // struct_tag
         1,                                          // exe_type_allowed
         167,                                        // pkt_size
         1,                                          // num_pkts
         5,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_INT, CBI_INT, CBI_FLOAT, CBI_FLOAT}, // data types
         {1, 1, 1, CBPM_NUM_DP_TURNS_OFFSET*CBPM_HALF_TURN_OPTIONS*CBPM_MAX_PHASE_DIM*CBPM_NUM_PHASE_COEFFS*CBPM_MAX_CARDS, CBPM_MAX_CARDS}, // data counts
         {1, 1, 1, 1, 1},                            // element sizes
         {cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_float_convert, cbi_float_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_beta_phase_out_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_find_delay_out_cfg = {
         "cbpm_find_delay_out",                      // name
         CBPM_FIND_DELAY_OUT_TAG,                    // struct_tag
         1,                                          // exe_type_allowed
         31,                                         // pkt_size
         1,                                          // num_pkts
         8,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_FLOAT, CBI_FLOAT, CBI_INT, CBI_FLOAT, CBI_FLOAT, CBI_INT, CBI_INT}, // data types
         {1, CBPM_MAX_FIT_COEFFS, CBPM_MAX_ACQ_CONTROLLERS, CBPM_MAX_ACQ_CONTROLLERS, CBPM_MAX_ACQ_CONTROLLERS, CBPM_MAX_ACQ_CONTROLLERS, 1, 1}, // data counts
         {1, 1, 1, 1, 1, 1, 1, 1},                   // element sizes
         {cbi_int_convert, cbi_float_convert, cbi_float_convert, cbi_int_convert, cbi_float_convert, cbi_float_convert, cbi_int_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_find_delay_out_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_bfind_delay_out_cfg = {
         "cbpm_bfind_delay_out",                     // name
         CBPM_BFIND_DELAY_OUT_TAG,                   // struct_tag
         1,                                          // exe_type_allowed
         120,                                        // pkt_size
         1,                                          // num_pkts
         6,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_FLOAT, CBI_INT, CBI_INT, CBI_INT, CBI_INT}, // data types
         {CBPM_FIND_DELAYS_HIST_LENGTH*CBPM_MAX_ACQ_CONTROLLERS, CBPM_FIND_DELAYS_HIST_LENGTH*CBPM_MAX_ACQ_CONTROLLERS, CBPM_FIND_DELAYS_HIST_LENGTH*CBPM_MAX_ACQ_CONTROLLERS, CBPM_FIND_DELAYS_HIST_LENGTH, CBPM_FIND_DELAYS_HIST_LENGTH, CBPM_FIND_DELAYS_HIST_LENGTH}, // data counts
         {1, 1, 1, 1, 1, 1},                         // element sizes
         {cbi_int_convert, cbi_float_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_bfind_delay_out_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_find_delay_params_cfg = {
         "cbpm_find_delay_params",                   // name
         CBPM_FIND_DELAY_PARAMS_TAG,                 // struct_tag
         1,                                          // exe_type_allowed
         2,                                          // pkt_size
         1,                                          // num_pkts
         2,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_INT},                         // data types
         {1, 1},                                     // data counts
         {1, 1},                                     // element sizes
         {cbi_int_convert, cbi_int_convert},         // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_find_delay_params_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_chan_cal_work_cfg = {
         "cbpm_chan_cal_work",                       // name
         CBPM_CHAN_CAL_WORK_TAG,                     // struct_tag
         1,                                          // exe_type_allowed
         256,                                        // pkt_size
         32,                                         // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_STRUCT},                               // data types
         {CBPM_MAX_CARDS},                           // data counts
         {CBPM_MAX_CHAN_DELAY_COUNTS + CBPM_MAX_CHAN_DELAY_COUNTS}, // element sizes
         {cbpm_chan_cal_data_convert},               // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_chan_cal_work_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_ped_cal_out_cfg = {
         "cbpm_ped_cal_out",                         // name
         CBPM_PED_CAL_OUT_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         176,                                        // pkt_size
         1,                                          // num_pkts
         2,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_FLOAT, CBI_FLOAT},                     // data types
         {CBPM_MAX_CHANS_PER_CARD*CBPM_MAX_CARDS*CBPM_MAX_GAINS, CBPM_MAX_CHANS_PER_CARD*CBPM_MAX_CARDS*CBPM_MAX_GAINS}, // data counts
         {1, 1},                                     // element sizes
         {cbi_float_convert, cbi_float_convert},     // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_ped_cal_out_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_raw_params_cfg = {
         "cbpm_raw_params",                          // name
         CBPM_RAW_PARAMS_TAG,                        // struct_tag
         1,                                          // exe_type_allowed
         7,                                          // pkt_size
         1,                                          // num_pkts
         7,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT}, // data types
         {1, 1, 1, 1, 1, 1, 1},                      // data counts
         {1, 1, 1, 1, 1, 1, 1},                      // element sizes
         {cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_raw_params_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_proc_params_cfg = {
         "cbpm_proc_params",                         // name
         CBPM_PROC_PARAMS_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         1,                                          // pkt_size
         1,                                          // num_pkts
         1,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT},                                  // data types
         {1},                                        // data counts
         {1},                                        // element sizes
         {cbi_int_convert},                          // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_proc_params_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_cal_params_cfg = {
         "cbpm_cal_params",                          // name
         CBPM_CAL_PARAMS_TAG,                        // struct_tag
         1,                                          // exe_type_allowed
         4,                                          // pkt_size
         1,                                          // num_pkts
         4,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_INT, CBI_INT, CBI_INT},       // data types
         {1, 1, 1, 1},                               // data counts
         {1, 1, 1, 1},                               // element sizes
         {cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_cal_params_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_diagnostic_cfg = {
         "cbpm_diagnostic",                          // name
         CBPM_DIAGNOSTIC_TAG,                        // struct_tag
         1,                                          // exe_type_allowed
         12,                                         // pkt_size
         1,                                          // num_pkts
         6,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT, CBI_INT}, // data types
         {CBPM_MAX_ACQ_CONTROLLERS, CBPM_MAX_ACQ_CONTROLLERS, 1, 1, 1, 1}, // data counts
         {1, 1, 1, 1, 1, 1},                         // element sizes
         {cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_diagnostic_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_code_params_cfg = {
         "cbpm_code_params",                         // name
         CBPM_CODE_PARAMS_TAG,                       // struct_tag
         1,                                          // exe_type_allowed
         50,                                         // pkt_size
         1,                                          // num_pkts
         2,                                          // num_vars
         CBI_CTL_READ_WRITE,                         // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_STRUCT, CBI_INT},                      // data types
         {CBPM_NUM_TESTS, CBPM_MAX_NUM_EXECUTION_FLAGS}, // data counts
         {5, 1},                                     // element sizes
         {cbpm_test_params_struct_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_code_params_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_test_results_cfg = {
         "cbpm_test_results",                        // name
         CBPM_TEST_RESULTS_TAG,                      // struct_tag
         1,                                          // exe_type_allowed
         30,                                         // pkt_size
         1,                                          // num_pkts
         2,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_INT},                         // data types
         {CBPM_NUM_TESTS_ENCODED, CBPM_NUM_TESTS*CBPM_MAX_ACQ_CONTROLLERS}, // data counts
         {1, 1},                                     // element sizes
         {cbi_int_convert, cbi_int_convert},         // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_test_results_cfg;
#endif


#if defined(CBPM_NO_EXTERN)
      static const COMM_KEY_CONFIG cbpm_btest_results_cfg = {
         "cbpm_btest_results",                       // name
         CBPM_BTEST_RESULTS_TAG,                     // struct_tag
         1,                                          // exe_type_allowed
         196,                                        // pkt_size
         2,                                          // num_pkts
         3,                                          // num_vars
         CBI_CTL_READ_ONLY,                          // protection
         FIXED_REC_LENGTH,                           // rec length flag
         {CBI_INT, CBI_FLOAT, CBI_INT},              // data types
         {CBPM_FIND_DELAYS_HIST_LENGTH*CBPM_NUM_TESTS*CBPM_MAX_ACQ_CONTROLLERS, CBPM_FIND_DELAYS_HIST_LENGTH*CBPM_NUM_TESTS*CBPM_MAX_ACQ_CONTROLLERS, CBPM_FIND_DELAYS_HIST_LENGTH}, // data counts
         {1, 1, 1},                                  // element sizes
         {cbi_int_convert, cbi_float_convert, cbi_int_convert}, // conv func ptrs
         NULL,                                       // custom copy/check function
         cbi_struct_io                               // IO function
      };
#else
      extern const COMM_KEY_CONFIG cbpm_btest_results_cfg;
#endif


#if defined (__cplusplus)
}
#endif


#endif //..config_H
